#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>

// Function named 'pwncollege'
void pwncollege() {
    printf("This is the pwncollege function!\n");
}

int main() {
    pid_t pid = fork(); // Creating a child process

    if (pid == -1) {
        // Fork failed
        perror("fork");
        return 1;
    } else if (pid == 0) {
        // Child process
        printf("Child process\n");
        // Execute the child process from /challenge/embryoio_level29
        char *args[] = {"/challenge/embryoio_level29", NULL};
        execv("/challenge/embryoio_level29", args);
        // If execv returns, it must have failed
        perror("execv");
        return 1;
    } else {
        // Parent process
        printf("Parent process\n");
        // You can wait for the child process to finish if needed
        wait(NULL);
    }

    return 0;
}

pwn.college{UBCe_a8BWVvlXgFKDhL6SRFSQ5P.QX5IDL1gjM1QzW}
